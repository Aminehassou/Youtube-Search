{"version":3,"sources":["img/search.svg","components/SearchForm.js","img/youtube-search-logo.png","components/Navbar.js","components/Video.js","api/youtube.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","handleSubmit","searchQuery","setSearchQuery","history","useHistory","action","method","onSubmit","e","push","preventDefault","className","htmlFor","autoComplete","value","onInput","target","type","id","placeholder","name","src","searchIcon","Navbar","href","logo","width","alt","Video","props","link","thumbnail","dangerouslySetInnerHTML","__html","title","query","apiKey","a","fetch","response","json","data","items","fetchResults","App","search","window","location","URLSearchParams","get","useState","videos","setVideos","then","index","length","snippet","etag","thumbnails","medium","url","videoId","map","video","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99be2253.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.57e45f87.svg\";","import { useHistory } from 'react-router-dom'\n\nimport searchIcon from \"../img/search.svg\"\n\nfunction SearchForm({ handleSubmit, searchQuery, setSearchQuery }) {\n  const history = useHistory();\n  const onSubmit = e => {\n    history.push(`?s=${searchQuery}`)\n    e.preventDefault()\n    handleSubmit(searchQuery)\n  };\n\n  return (\n    <form action=\"/\" method=\"get\" onSubmit={onSubmit} className=\"search-form\">\n        <label htmlFor=\"header-search\">\n            <span className=\"hidden\">Youtube search</span>\n        </label>\n          <input className=\"search-input\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              onInput={e => setSearchQuery(e.target.value)}\n              type=\"text\"\n              id=\"header-search\" \n              placeholder=\"Youtube Search\"\n              name=\"s\"\n          />\n          <button className=\"search-button\" type=\"submit\"><img src={searchIcon} /></button>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","export default __webpack_public_path__ + \"static/media/youtube-search-logo.379b737e.png\";","import SearchForm from \"./SearchForm\";\n\nimport logo from \"../img/youtube-search-logo.png\"\n\nfunction Navbar({handleSubmit, searchQuery, setSearchQuery}) {\n    \n    return (\n        <div className=\"container\">\n            <a href=\"./\">\n            <img src={logo} width=\"250\" className=\"item\" alt=\"logo\"/>\n            </a>\n            <SearchForm handleSubmit={handleSubmit} searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery} className=\"item\"/>\n        </div>\n    )}\n  \nexport default Navbar;","\nfunction Video(props) {\n    \n  return (\n    <div className=\"video-item\">\n    <a href={props.link}>\n    <img src={props.thumbnail} alt=\"Youtube Video\"/> <br />\n    <span dangerouslySetInnerHTML={{__html: props.title}} />\n    </a>\n    </div>\n  )}\n\nexport default Video;","async function fetchResults(query, apiKey) {\n    let response = await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&q=${query}&type=video&key=${apiKey}&maxResults=20`, {\n        method: \"GET\"\n    });\n    let data = await response.json();\n    return data.items\n  }\n\nexport default fetchResults","import './App.css';\nimport Navbar from './components/Navbar'\nimport Video from './components/Video'\nimport fetchResults from './api/youtube'\nimport { useState } from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\n//app\nfunction App() {\n  const { search } = window.location\n  const query = new URLSearchParams(search).get(\"s\")\n  const [searchQuery, setSearchQuery] = useState(query || '')\n  const [videos, setVideos] = useState([])\n\n  function handleSubmit(query) {\n    const results = fetchResults(query, \"AIzaSyASCaXPWIRkUHlN1pcEEG8Lj3Cd3MMOOI0\")\n    results.then(data => {\n      let videos = []\n      for (let index = 0; index < data.length; index++) {\n        let snippet = data[index].snippet\n        videos.push({\"id\": data[index].etag, \"title\": snippet.title, \"thumbnail\": snippet.thumbnails.medium.url,\n                     \"link\": `https://www.youtube.com/watch?v=${data[index].id.videoId}`})\n      }\n      setVideos(videos)\n    })\n  }\n  return (\n    <Router>\n      <div>\n        <Navbar handleSubmit={handleSubmit} searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}/>\n        <div className=\"video-container\">\n        {videos.map(video => (\n            <div key={video.id}>\n              <Video title={video.title} thumbnail={video.thumbnail} link={video.link}/>\n              <br />\n            </div>\n        ))}\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}